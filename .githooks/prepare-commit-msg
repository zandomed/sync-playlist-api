#!/bin/sh

# Git prepare-commit-msg hook for conventional commits
# This hook provides a template for commit messages if none is provided

COMMIT_MSG_FILE=$1
COMMIT_SOURCE=$2
SHA1=$3

# Only add template for regular commits (not merges, amends, etc.)
if [ -z "$COMMIT_SOURCE" ] || [ "$COMMIT_SOURCE" = "template" ]; then
    # Check if the commit message is empty or only contains comments
    if [ ! -s "$COMMIT_MSG_FILE" ] || ! grep -q '^[^#]' "$COMMIT_MSG_FILE"; then
        cat > "$COMMIT_MSG_FILE" << 'EOF'
# <type>[optional scope]: <description>
#
# [optional body]
#
# [optional footer(s)]
#
# --- Conventional Commit Types ---
# feat:     A new feature
# fix:      A bug fix
# docs:     Documentation only changes
# style:    Changes that do not affect meaning (white-space, formatting, etc)
# refactor: A code change that neither fixes a bug nor adds a feature
# perf:     A code change that improves performance
# test:     Adding missing tests or correcting existing tests
# build:    Changes that affect the build system or external dependencies
# ci:       Changes to CI configuration files and scripts
# chore:    Other changes that don't modify src or test files
# revert:   Reverts a previous commit
#
# --- Examples ---
# feat(auth): add user authentication
# fix(api): resolve validation error
# docs: update README with setup instructions
EOF
    fi
fi